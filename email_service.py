import os
import logging
import requests

class EmailService:
    def __init__(self):
        self.resend_api_key = os.environ.get("RESEND_API_KEY", "")
        self.api_url = "https://api.resend.com/emails"

    def send_digest_email(self, user_email, summaries_data):
        """
        Send HTML email digest with video summaries
        summaries_data: list of dicts with video info and summaries
        """
        if not self.resend_api_key:
            logging.error("Resend API key not provided")
            return False

        try:
            html_content = self._generate_email_html(summaries_data)
            
            payload = {
                "from": "TL;DW <noreply@resend.dev>",
                "to": [user_email],
                "subject": "Your TL;DW Video Digest",
                "html": html_content
            }

            headers = {
                "Authorization": f"Bearer {self.resend_api_key}",
                "Content-Type": "application/json"
            }

            response = requests.post(self.api_url, json=payload, headers=headers)
            
            if response.status_code == 200:
                logging.info(f"Email sent successfully to {user_email}")
                return True
            else:
                logging.error(f"Failed to send email: {response.status_code} - {response.text}")
                return False

        except Exception as e:
            logging.error(f"Error sending email: {e}")
            return False

    def _generate_email_html(self, summaries_data):
        """Generate HTML content for the email digest"""
        
        html_template = '''<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TL;DW Video Digest</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f9f9f9;
        }
        .header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 8px;
        }
        .video-card {
            background: white;
            margin-bottom: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        .video-header {
            padding: 20px;
            border-bottom: 1px solid #eee;
        }
        .video-title {
            font-size: 1.4em;
            font-weight: bold;
            margin-bottom: 10px;
        }
        .video-title a {
            color: #333;
            text-decoration: none;
        }
        .video-title a:hover {
            text-decoration: underline;
        }
        .channel-name {
            color: #666;
            font-size: 0.9em;
        }
        .thumbnail {
            width: 100px;
            height: 75px;
            object-fit: cover;
            border-radius: 4px;
            float: left;
            margin-right: 15px;
        }
        .summary-content {
            padding: 20px;
        }
        .summary-content h4 {
            color: #667eea;
            margin-top: 0;
        }
        .summary-content ul {
            padding-left: 20px;
        }
        .summary-content li {
            margin-bottom: 8px;
        }
        .timestamp-link {
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
        }
        .timestamp-link:hover {
            text-decoration: underline;
        }
        .footer {
            text-align: center;
            margin-top: 40px;
            padding: 20px;
            color: #666;
            font-size: 0.9em;
        }
        .clearfix::after {
            content: "";
            display: table;
            clear: both;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>TL;DW</h1>
        <p>Your Video Digest</p>
    </div>
    
    {video_summaries}
    
    <div class="footer">
        <p>Generated by TL;DW - Making videos digestible, one summary at a time.</p>
    </div>
</body>
</html>
'''

        video_summaries_html = ""
        for data in summaries_data:
            # Escape HTML special characters in user content
            title = self._escape_html(data['title'])
            channel_title = self._escape_html(data.get('channel_title', ''))
            summary = data['summary']  # Summary is already formatted HTML
            
            video_html = f'''
    <div class="video-card">
        <div class="video-header clearfix">
            <img src="{data.get('thumbnail', '')}" alt="Video thumbnail" class="thumbnail">
            <div class="video-title">
                <a href="https://www.youtube.com/watch?v={data['video_id']}" target="_blank">
                    {title}
                </a>
            </div>
            <div class="channel-name">{channel_title}</div>
        </div>
        <div class="summary-content">
            {summary}
        </div>
    </div>
'''
            video_summaries_html += video_html

        return html_template.format(video_summaries=video_summaries_html)
    
    def _escape_html(self, text):
        """Escape HTML special characters"""
        if not text:
            return ""
        return (text.replace('&', '&amp;')
                   .replace('<', '&lt;')
                   .replace('>', '&gt;')
                   .replace('"', '&quot;')
                   .replace("'", '&#x27;'))
